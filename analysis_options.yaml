# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  errors:
    always_use_package_imports: ignore
    public_member_api_docs: ignore
    lines_longer_than_80_chars: ignore
    avoid_function_literals_in_foreach_calls: ignore
    implicit_dynamic_parameter: ignore
    implicit_dynamic_type: ignore
    implicit_dynamic_map_literal: ignore
    implicit_dynamic_method: ignore
    implicit_dynamic_list_literal: ignore
    implicit_dynamic_variable: ignore
    implicit_dynamic_function: ignore
    avoid_setters_without_getters: ignore
    #    experimental lint
    use_build_context_synchronously: ignore
    body_might_complete_normally_nullable: ignore
  exclude:
    - 'bin/cache/**'
    # custom
    - 'lib/generated/**'
    - '**.g.dart'
  #    - 'editable/**'
linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # avoid_print: false  # Uncomment to disable the `avoid_print` rule
    # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule
    - prefer_const_constructors_in_immutables
    - prefer_relative_imports
    #    - require_trailing_commas
    - prefer_final_locals
    - avoid_void_async
    #    - use_if_null_to_convert_nulls_to_bools
    #    - avoid_positional_boolean_parameters
    #    - always_put_required_named_parameters_first
    - unnecessary_await_in_return
    - prefer_expression_function_bodies
    - avoid_field_initializers_in_const_classes
    - file_names
    - unnecessary_parenthesis
    - prefer_void_to_null
    - avoid_bool_literals_in_conditional_expressions
    - avoid_returning_null_for_void
    - prefer_function_declarations_over_variables
    - empty_statements
    - prefer_is_not_operator
    - cast_nullable_to_non_nullable
    - avoid_classes_with_only_static_members
    - type_annotate_public_apis
    - prefer_const_literals_to_create_immutables
    - use_named_constants
    - use_string_buffers
    - unnecessary_raw_strings
    - unnecessary_null_checks
    - parameter_assignments
    - prefer_const_declarations
    - sort_unnamed_constructors_first
    - use_setters_to_change_properties
    - curly_braces_in_flow_control_structures

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
